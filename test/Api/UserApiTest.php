<?php
/**
 * UserApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Kimai - API
 *
 * JSON API for the Kimai time-tracking software. Read our [API documentation](https://www.kimai.org/documentation/rest-api.html) and download the [Open API definition](doc.json) to import into your API client.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.64
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteDeleteApiToken
     *
     * Delete an API token for the current user.
     *
     */
    public function testDeleteDeleteApiToken()
    {
    }

    /**
     * Test case for getGetUser
     *
     * Return one user entity.
     *
     */
    public function testGetGetUser()
    {
    }

    /**
     * Test case for getGetUsers
     *
     * Returns the collection of users (which are visible to the user).
     *
     */
    public function testGetGetUsers()
    {
    }

    /**
     * Test case for getMeUser
     *
     * Return the current user entity.
     *
     */
    public function testGetMeUser()
    {
    }

    /**
     * Test case for patchPatchUser
     *
     * Update an existing user.
     *
     */
    public function testPatchPatchUser()
    {
    }

    /**
     * Test case for postPostUser
     *
     * Creates a new user.
     *
     */
    public function testPostPostUser()
    {
    }
}
